import org.apache.sling.api.resource.ResourceResolver;
import org.apache.sling.api.resource.ResourceResolverFactory;
import org.osgi.service.component.annotations.Component;
import org.osgi.service.component.annotations.Reference;
import com.adobe.cq.dam.cfm.ContentFragment;
import com.adobe.cq.dam.cfm.ContentFragmentManager;
import com.adobe.cq.dam.cfm.ContentElement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Component(service = YourService.class)
public class YourService {

    private static final Logger log = LoggerFactory.getLogger(YourService.class);

    @Reference
    private ResourceResolverFactory resolverFactory;

    public void getContentFragmentContent(String cfPath) {
        ResourceResolver resourceResolver = null;
        try {
            // Obtain a ResourceResolver with appropriate privileges
            resourceResolver = resolverFactory.getServiceResourceResolver(null);

            // Adapt to ContentFragmentManager
            ContentFragmentManager fragmentManager = resourceResolver.adaptTo(ContentFragmentManager.class);

            if (fragmentManager != null) {
                // Retrieve the ContentFragment
                ContentFragment contentFragment = fragmentManager.getFragment(cfPath, 0);

                if (contentFragment != null) {
                    // Access elements within the ContentFragment
                    Iterator<ContentElement> elements = contentFragment.getElements();
                    while (elements.hasNext()) {
                        ContentElement element = elements.next();
                        String elementName = element.getName();
                        String elementValue = element.getContent();

                        // Process the content as needed
                        log.info("Element Name: {}, Element Value: {}", elementName, elementValue);
                    }
                } else {
                    log.warn("Content Fragment not found at path: {}", cfPath);
                }
            } else {
                log.error("Unable to adapt ResourceResolver to ContentFragmentManager");
            }
        } catch (Exception e) {
            log.error("Error retrieving content fragment content", e);
        } finally {
            if (resourceResolver != null && resourceResolver.isLive()) {
                resourceResolver.close();
            }
        }
    }
}
