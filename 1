package com.example.core.utils;

import com.adobe.cq.dam.cfm.ContentElement;
import com.adobe.cq.dam.cfm.ContentFragment;
import org.apache.sling.api.resource.*;
import org.osgi.service.component.annotations.Component;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.*;

@Component(service = ContentFragmentUtil.class, immediate = true)
public class ContentFragmentUtil {

    private static final Logger log = LoggerFactory.getLogger(ContentFragmentUtil.class);

    public Map<String, String> getContentFragmentElements(ResourceResolver resourceResolver, String contentFragmentPath) {
        Map<String, String> elementsMap = new HashMap<>();
        if (resourceResolver != null && contentFragmentPath != null && !contentFragmentPath.isEmpty()) {
            Resource cfResource = resourceResolver.getResource(contentFragmentPath);
            if (cfResource != null) {
                ContentFragment contentFragment = cfResource.adaptTo(ContentFragment.class);
                if (contentFragment != null) {
                    Iterator<ContentElement> elements = contentFragment.getElements();
                    while (elements.hasNext()) {
                        ContentElement element = elements.next();
                        elementsMap.put(element.getName(), element.getValue().getString());
                    }
                } else {
                    log.warn("Resource at path {} is not a Content Fragment", contentFragmentPath);
                }
            } else {
                log.warn("Resource not found at path: {}", contentFragmentPath);
            }
        } else {
            log.warn("ResourceResolver is null or Content Fragment path is null or empty");
        }
        return elementsMap;
    }
}
